// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trt_plugin.proto

#ifndef PROTOBUF_trt_5fplugin_2eproto__INCLUDED
#define PROTOBUF_trt_5fplugin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace macnica_trt_plugins {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_trt_5fplugin_2eproto();
void protobuf_AssignDesc_trt_5fplugin_2eproto();
void protobuf_ShutdownFile_trt_5fplugin_2eproto();

class copy_Message;
class pooling_Message;

enum DataTypeMessage {
  kFloat = 0,
  kHalf = 1,
  kInt8 = 2,
  kInt32 = 3,
  DataTypeMessage_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataTypeMessage_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataTypeMessage_IsValid(int value);
const DataTypeMessage DataTypeMessage_MIN = kFloat;
const DataTypeMessage DataTypeMessage_MAX = kInt32;
const int DataTypeMessage_ARRAYSIZE = DataTypeMessage_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataTypeMessage_descriptor();
inline const ::std::string& DataTypeMessage_Name(DataTypeMessage value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataTypeMessage_descriptor(), value);
}
inline bool DataTypeMessage_Parse(
    const ::std::string& name, DataTypeMessage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataTypeMessage>(
    DataTypeMessage_descriptor(), name, value);
}
enum PoolingMode {
  Maximum = 0,
  Average = 1,
  PoolingMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PoolingMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PoolingMode_IsValid(int value);
const PoolingMode PoolingMode_MIN = Maximum;
const PoolingMode PoolingMode_MAX = Average;
const int PoolingMode_ARRAYSIZE = PoolingMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* PoolingMode_descriptor();
inline const ::std::string& PoolingMode_Name(PoolingMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    PoolingMode_descriptor(), value);
}
inline bool PoolingMode_Parse(
    const ::std::string& name, PoolingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PoolingMode>(
    PoolingMode_descriptor(), name, value);
}
enum AlgoImpl {
  CUDA = 0,
  CuDNN = 1,
  AlgoImpl_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlgoImpl_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlgoImpl_IsValid(int value);
const AlgoImpl AlgoImpl_MIN = CUDA;
const AlgoImpl AlgoImpl_MAX = CuDNN;
const int AlgoImpl_ARRAYSIZE = AlgoImpl_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlgoImpl_descriptor();
inline const ::std::string& AlgoImpl_Name(AlgoImpl value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlgoImpl_descriptor(), value);
}
inline bool AlgoImpl_Parse(
    const ::std::string& name, AlgoImpl* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlgoImpl>(
    AlgoImpl_descriptor(), name, value);
}
// ===================================================================

class pooling_Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:macnica_trt_plugins.pooling_Message) */ {
 public:
  pooling_Message();
  virtual ~pooling_Message();

  pooling_Message(const pooling_Message& from);

  inline pooling_Message& operator=(const pooling_Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pooling_Message& default_instance();

  void Swap(pooling_Message* other);

  // implements Message ----------------------------------------------

  inline pooling_Message* New() const { return New(NULL); }

  pooling_Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pooling_Message& from);
  void MergeFrom(const pooling_Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(pooling_Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 dims = 1;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 1;
  ::google::protobuf::int64 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int64 value);
  void add_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dims();

  // optional .macnica_trt_plugins.PoolingMode mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::macnica_trt_plugins::PoolingMode mode() const;
  void set_mode(::macnica_trt_plugins::PoolingMode value);

  // repeated int64 window = 3;
  int window_size() const;
  void clear_window();
  static const int kWindowFieldNumber = 3;
  ::google::protobuf::int64 window(int index) const;
  void set_window(int index, ::google::protobuf::int64 value);
  void add_window(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      window() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_window();

  // repeated int64 stride = 4;
  int stride_size() const;
  void clear_stride();
  static const int kStrideFieldNumber = 4;
  ::google::protobuf::int64 stride(int index) const;
  void set_stride(int index, ::google::protobuf::int64 value);
  void add_stride(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      stride() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_stride();

  // optional .macnica_trt_plugins.AlgoImpl impl = 5;
  void clear_impl();
  static const int kImplFieldNumber = 5;
  ::macnica_trt_plugins::AlgoImpl impl() const;
  void set_impl(::macnica_trt_plugins::AlgoImpl value);

  // @@protoc_insertion_point(class_scope:macnica_trt_plugins.pooling_Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dims_;
  mutable int _dims_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > window_;
  mutable int _window_cached_byte_size_;
  int mode_;
  int impl_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > stride_;
  mutable int _stride_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_trt_5fplugin_2eproto();
  friend void protobuf_AssignDesc_trt_5fplugin_2eproto();
  friend void protobuf_ShutdownFile_trt_5fplugin_2eproto();

  void InitAsDefaultInstance();
  static pooling_Message* default_instance_;
};
// -------------------------------------------------------------------

class copy_Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:macnica_trt_plugins.copy_Message) */ {
 public:
  copy_Message();
  virtual ~copy_Message();

  copy_Message(const copy_Message& from);

  inline copy_Message& operator=(const copy_Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const copy_Message& default_instance();

  void Swap(copy_Message* other);

  // implements Message ----------------------------------------------

  inline copy_Message* New() const { return New(NULL); }

  copy_Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const copy_Message& from);
  void MergeFrom(const copy_Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(copy_Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 dims = 1;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 1;
  ::google::protobuf::int64 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int64 value);
  void add_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dims();

  // @@protoc_insertion_point(class_scope:macnica_trt_plugins.copy_Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dims_;
  mutable int _dims_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_trt_5fplugin_2eproto();
  friend void protobuf_AssignDesc_trt_5fplugin_2eproto();
  friend void protobuf_ShutdownFile_trt_5fplugin_2eproto();

  void InitAsDefaultInstance();
  static copy_Message* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// pooling_Message

// repeated int64 dims = 1;
inline int pooling_Message::dims_size() const {
  return dims_.size();
}
inline void pooling_Message::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int64 pooling_Message::dims(int index) const {
  // @@protoc_insertion_point(field_get:macnica_trt_plugins.pooling_Message.dims)
  return dims_.Get(index);
}
inline void pooling_Message::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:macnica_trt_plugins.pooling_Message.dims)
}
inline void pooling_Message::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:macnica_trt_plugins.pooling_Message.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
pooling_Message::dims() const {
  // @@protoc_insertion_point(field_list:macnica_trt_plugins.pooling_Message.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
pooling_Message::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:macnica_trt_plugins.pooling_Message.dims)
  return &dims_;
}

// optional .macnica_trt_plugins.PoolingMode mode = 2;
inline void pooling_Message::clear_mode() {
  mode_ = 0;
}
inline ::macnica_trt_plugins::PoolingMode pooling_Message::mode() const {
  // @@protoc_insertion_point(field_get:macnica_trt_plugins.pooling_Message.mode)
  return static_cast< ::macnica_trt_plugins::PoolingMode >(mode_);
}
inline void pooling_Message::set_mode(::macnica_trt_plugins::PoolingMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:macnica_trt_plugins.pooling_Message.mode)
}

// repeated int64 window = 3;
inline int pooling_Message::window_size() const {
  return window_.size();
}
inline void pooling_Message::clear_window() {
  window_.Clear();
}
inline ::google::protobuf::int64 pooling_Message::window(int index) const {
  // @@protoc_insertion_point(field_get:macnica_trt_plugins.pooling_Message.window)
  return window_.Get(index);
}
inline void pooling_Message::set_window(int index, ::google::protobuf::int64 value) {
  window_.Set(index, value);
  // @@protoc_insertion_point(field_set:macnica_trt_plugins.pooling_Message.window)
}
inline void pooling_Message::add_window(::google::protobuf::int64 value) {
  window_.Add(value);
  // @@protoc_insertion_point(field_add:macnica_trt_plugins.pooling_Message.window)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
pooling_Message::window() const {
  // @@protoc_insertion_point(field_list:macnica_trt_plugins.pooling_Message.window)
  return window_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
pooling_Message::mutable_window() {
  // @@protoc_insertion_point(field_mutable_list:macnica_trt_plugins.pooling_Message.window)
  return &window_;
}

// repeated int64 stride = 4;
inline int pooling_Message::stride_size() const {
  return stride_.size();
}
inline void pooling_Message::clear_stride() {
  stride_.Clear();
}
inline ::google::protobuf::int64 pooling_Message::stride(int index) const {
  // @@protoc_insertion_point(field_get:macnica_trt_plugins.pooling_Message.stride)
  return stride_.Get(index);
}
inline void pooling_Message::set_stride(int index, ::google::protobuf::int64 value) {
  stride_.Set(index, value);
  // @@protoc_insertion_point(field_set:macnica_trt_plugins.pooling_Message.stride)
}
inline void pooling_Message::add_stride(::google::protobuf::int64 value) {
  stride_.Add(value);
  // @@protoc_insertion_point(field_add:macnica_trt_plugins.pooling_Message.stride)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
pooling_Message::stride() const {
  // @@protoc_insertion_point(field_list:macnica_trt_plugins.pooling_Message.stride)
  return stride_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
pooling_Message::mutable_stride() {
  // @@protoc_insertion_point(field_mutable_list:macnica_trt_plugins.pooling_Message.stride)
  return &stride_;
}

// optional .macnica_trt_plugins.AlgoImpl impl = 5;
inline void pooling_Message::clear_impl() {
  impl_ = 0;
}
inline ::macnica_trt_plugins::AlgoImpl pooling_Message::impl() const {
  // @@protoc_insertion_point(field_get:macnica_trt_plugins.pooling_Message.impl)
  return static_cast< ::macnica_trt_plugins::AlgoImpl >(impl_);
}
inline void pooling_Message::set_impl(::macnica_trt_plugins::AlgoImpl value) {
  
  impl_ = value;
  // @@protoc_insertion_point(field_set:macnica_trt_plugins.pooling_Message.impl)
}

// -------------------------------------------------------------------

// copy_Message

// repeated int64 dims = 1;
inline int copy_Message::dims_size() const {
  return dims_.size();
}
inline void copy_Message::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int64 copy_Message::dims(int index) const {
  // @@protoc_insertion_point(field_get:macnica_trt_plugins.copy_Message.dims)
  return dims_.Get(index);
}
inline void copy_Message::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:macnica_trt_plugins.copy_Message.dims)
}
inline void copy_Message::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:macnica_trt_plugins.copy_Message.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
copy_Message::dims() const {
  // @@protoc_insertion_point(field_list:macnica_trt_plugins.copy_Message.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
copy_Message::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:macnica_trt_plugins.copy_Message.dims)
  return &dims_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace macnica_trt_plugins

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::macnica_trt_plugins::DataTypeMessage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::macnica_trt_plugins::DataTypeMessage>() {
  return ::macnica_trt_plugins::DataTypeMessage_descriptor();
}
template <> struct is_proto_enum< ::macnica_trt_plugins::PoolingMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::macnica_trt_plugins::PoolingMode>() {
  return ::macnica_trt_plugins::PoolingMode_descriptor();
}
template <> struct is_proto_enum< ::macnica_trt_plugins::AlgoImpl> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::macnica_trt_plugins::AlgoImpl>() {
  return ::macnica_trt_plugins::AlgoImpl_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_trt_5fplugin_2eproto__INCLUDED
